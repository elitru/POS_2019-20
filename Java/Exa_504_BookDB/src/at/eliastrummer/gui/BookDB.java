package at.eliastrummer.gui;

import at.eliastrummer.beans.Book;
import at.eliastrummer.database.DBAcces;
import at.eliastrummer.util.HTMLTemplate;
import java.time.format.DateTimeFormatter;
import javax.swing.DefaultComboBoxModel;

public class BookDB extends javax.swing.JFrame {
    
    private BookModel bookModel = new BookModel();
    private DefaultComboBoxModel<String> genreModel = new DefaultComboBoxModel<>();
    private DefaultComboBoxModel<String> publisherModel = new DefaultComboBoxModel<>();
    
    public BookDB() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        epInfo.setText("");
        
        DBAcces.getInstance().connect();
        
        this.ltBooks.setModel(bookModel);
        bookModel.addAll(DBAcces.getInstance().getBooks("", "", "", ""));
        
        genreModel.addElement("All");
        DBAcces.getInstance().getAllGenres().forEach(genreModel::addElement);
        this.cbGenre.setModel(genreModel);
        
        publisherModel.addElement("All");
        DBAcces.getInstance().getAllPublishers().forEach(publisherModel::addElement);
        this.cbVerlag.setModel(publisherModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSearchType = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbVerlag = new javax.swing.JComboBox<>();
        tfSearch = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        cbGenre = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        rbBook = new javax.swing.JRadioButton();
        rbAuthor = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        scoll = new javax.swing.JScrollPane();
        ltBooks = new javax.swing.JList<>();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        epInfo = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 520));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Suchen"));
        jPanel1.setLayout(new java.awt.GridLayout(2, 2));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("Verlag:");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel2.add(jLabel2, java.awt.BorderLayout.LINE_START);

        cbVerlag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbVerlag.setPreferredSize(new java.awt.Dimension(150, 30));
        cbVerlag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onDoFilter(evt);
            }
        });
        jPanel2.add(cbVerlag, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2);

        tfSearch.setToolTipText("");
        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSearchKeyReleased(evt);
            }
        });
        jPanel1.add(tfSearch);

        jPanel3.setLayout(new java.awt.BorderLayout());

        label.setText("Genre:");
        label.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel3.add(label, java.awt.BorderLayout.LINE_START);

        cbGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbGenre.setPreferredSize(new java.awt.Dimension(250, 30));
        cbGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onDoFilter(evt);
            }
        });
        jPanel3.add(cbGenre, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        bgSearchType.add(rbBook);
        rbBook.setSelected(true);
        rbBook.setText("Buch");
        rbBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onDoFilter(evt);
            }
        });
        jPanel4.add(rbBook);

        bgSearchType.add(rbAuthor);
        rbAuthor.setText("Autor");
        rbAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onDoFilter(evt);
            }
        });
        jPanel4.add(rbAuthor);

        jPanel1.add(jPanel4);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("BÃ¼cher"));
        jPanel6.setLayout(new java.awt.BorderLayout());

        ltBooks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ltBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onValueChanged(evt);
            }
        });
        scoll.setViewportView(ltBooks);

        jPanel6.add(scoll, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel6);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Buchdetails"));
        jPanel7.setLayout(new java.awt.BorderLayout());

        epInfo.setEditable(false);
        epInfo.setContentType("text/html"); // NOI18N
        epInfo.setText("<html>\r\n  <head>\r\n\r\n  </head>\r\n  <body>\r\n   <h1 style=\"color: blue; text-align:center;\">{TITLE}</h1>\n   <h2 style=\"color: #333; text-align:center; text-decoration:underline;\">{AUTHOR}</h2>\n   <hr style=\"color:black;\"/>\n   <div style=\"text-align:center; margin: 0 auto;\">\n      <span style=\"color: green; text-align:left\">ISBN:</span>\n      <span style=\"text-align:left;\">{ISBN}</span>\n    </div>\n   <div style=\"text-align:center; margin: 0 auto;\">\n      <span style=\"color: green;  text-align:left\">Seitenzahl:</span>\n      <span style=\"text-align:left;\">{PAGES}</span>\n    </div>\n   <div style=\"text-align:center; margin: 0 auto;\">\n      <span style=\"color: green;  text-align:left\">Genre:</span>\n      <span style=\"text-align:left;\">{GENRE}</span>\n    </div>\n   <div style=\"text-align:center; margin: 0 auto;\">\n      <span style=\"color: green;  text-align:left\">Bewertungen:</span>\n      <span style=\"text-align:left;\">{RATING}</span>\n    </div>\n   <div style=\"text-align:center; margin: 0 auto;\">\n      <span style=\"color: green;  text-align:left\">Erscheinungsdatum:</span>\n      <span style=\"text-align:left;\">{PUBLISHED_ON}</span>\n    </div>\n   <div style=\"text-align:center; margin: 0 auto;\">\n      <span style=\"color: green;  text-align:left\">Verlag:</span>\n      <span style=\"text-align:left;\">{PUBLISHER}</span>\n    </div>\n  </body>\r\n</html>\r\n");
        jScrollPane1.setViewportView(epInfo);

        jPanel7.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel7);

        getContentPane().add(jPanel5, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        DBAcces.getInstance().disconnect();
    }//GEN-LAST:event_formWindowClosing

    private void onDoFilter(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onDoFilter
        String genre = (String) cbGenre.getSelectedItem();
        if(genre.equalsIgnoreCase("all")){
            genre = "";
        }
        
        String pub = (String) cbVerlag.getSelectedItem();
        if(pub.equalsIgnoreCase("all")){
            pub = "";
        }
        
        filter(genre, pub, rbAuthor.isSelected() ? tfSearch.getText() : "", rbBook.isSelected() ? tfSearch.getText() : "");
    }//GEN-LAST:event_onDoFilter

    private void tfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyReleased
        String genre = (String) cbGenre.getSelectedItem();
        if(genre.equalsIgnoreCase("all")){
            genre = "";
        }
        
        String pub = (String) cbVerlag.getSelectedItem();
        if(pub.equalsIgnoreCase("all")){
            pub = "";
        }
        
        filter(genre, pub, rbAuthor.isSelected() ? tfSearch.getText() : "", rbBook.isSelected() ? tfSearch.getText() : "");
    }//GEN-LAST:event_tfSearchKeyReleased

    private void onValueChanged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onValueChanged
        if(ltBooks.getSelectedValuesList().size() != 1){
            return;
        }
        
        format(ltBooks.getSelectedValuesList().get(0));
    }//GEN-LAST:event_onValueChanged

    private void filter(String genre, String publisher, String author, String title){
        bookModel.clear();
        bookModel.addAll(DBAcces.getInstance().getBooks(title, author, genre, publisher));
    }
    
    private void format(Book book){
        String html = HTMLTemplate.TEMPLATE;
        html = html.replace("{TITLE}", book.getTitle());
        html = html.replace("{PAGES}", book.getTotalPages() + "");
        html = html.replace("{PUBLISHED_ON}", book.getPublishedOn().format(DateTimeFormatter.ofPattern("dd.MM.yyyy")));
        html = html.replace("{ISBN}", book.getIsbn());
        html = html.replace("{RATING}", String.format("%.2f", book.getRating()));
        html = html.replace("{PUBLISHER}", book.getPublisher());
        
        String authors = "";
        
        for(int i = 0; i < book.getAuthors().size(); i++){
            authors += book.getAuthors().get(i).getLastname() + ", " + book.getAuthors().get(i).getFirstname() + (book.getAuthors().get(i).getMiddlename() != null ? book.getAuthors().get(i).getMiddlename() : "");
            
            if(i < book.getAuthors().size() - 1){
                authors += "<br/>";
            }
        }
        
        html = html.replace("{AUTHOR}", authors);
        
        String genres = "";
        
        for(int i = 0; i < book.getGenres().size(); i++){
            genres += book.getGenres().get(i);
            
            if(i < book.getAuthors().size() - 1){
                genres += ", ";
            }
        }
        
        html = html.replace("{GENRE}", genres);
        
        epInfo.setText(html);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookDB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSearchType;
    private javax.swing.JComboBox<String> cbGenre;
    private javax.swing.JComboBox<String> cbVerlag;
    private javax.swing.JEditorPane epInfo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JList<Book> ltBooks;
    private javax.swing.JRadioButton rbAuthor;
    private javax.swing.JRadioButton rbBook;
    private javax.swing.JScrollPane scoll;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
